<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts93403092.3</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>properties.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

CodeMirror.defineMode("properties", function() {\n
  return {\n
    token: function(stream, state) {\n
      var sol = stream.sol() || state.afterSection;\n
      var eol = stream.eol();\n
\n
      state.afterSection = false;\n
\n
      if (sol) {\n
        if (state.nextMultiline) {\n
          state.inMultiline = true;\n
          state.nextMultiline = false;\n
        } else {\n
          state.position = "def";\n
        }\n
      }\n
\n
      if (eol && ! state.nextMultiline) {\n
        state.inMultiline = false;\n
        state.position = "def";\n
      }\n
\n
      if (sol) {\n
        while(stream.eatSpace());\n
      }\n
\n
      var ch = stream.next();\n
\n
      if (sol && (ch === "#" || ch === "!" || ch === ";")) {\n
        state.position = "comment";\n
        stream.skipToEnd();\n
        return "comment";\n
      } else if (sol && ch === "[") {\n
        state.afterSection = true;\n
        stream.skipTo("]"); stream.eat("]");\n
        return "header";\n
      } else if (ch === "=" || ch === ":") {\n
        state.position = "quote";\n
        return null;\n
      } else if (ch === "\\\\" && state.position === "quote") {\n
        if (stream.next() !== "u") {    // u = Unicode sequence \\u1234\n
          // Multiline value\n
          state.nextMultiline = true;\n
        }\n
      }\n
\n
      return state.position;\n
    },\n
\n
    startState: function() {\n
      return {\n
        position : "def",       // Current position, "def", "quote" or "comment"\n
        nextMultiline : false,  // Is the next line multiline value\n
        inMultiline : false,    // Is the current line a multiline value\n
        afterSection : false    // Did we just open a section\n
      };\n
    }\n
\n
  };\n
});\n
\n
CodeMirror.defineMIME("text/x-properties", "properties");\n
CodeMirror.defineMIME("text/x-ini", "properties");\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>1734</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
