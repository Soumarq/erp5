<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Closebrackets Demo</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../doc/docs.css">\n
\n
<link rel="stylesheet" href="../lib/codemirror.css">\n
<script src="../lib/codemirror.js"></script>\n
<script src="../addon/edit/closebrackets.js"></script>\n
<script src="../mode/javascript/javascript.js"></script>\n
<style type="text/css">\n
      .CodeMirror {border-top: 1px solid #888; border-bottom: 1px solid #888;}\n
    </style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><img id=logo src="../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../index.html">Home</a>\n
    <li><a href="../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/marijnh/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a class=active href="#">Closebrackets</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Closebrackets Demo</h2>\n
<form><textarea id="code" name="code">(function() {\n
  var DEFAULT_BRACKETS = "()[]{}\'\'\\"\\"";\n
\n
  CodeMirror.defineOption("autoCloseBrackets", false, function(cm, val, old) {\n
    var wasOn = old && old != CodeMirror.Init;\n
    if (val && !wasOn)\n
      cm.addKeyMap(buildKeymap(typeof val == "string" ? val : DEFAULT_BRACKETS));\n
    else if (!val && wasOn)\n
      cm.removeKeyMap("autoCloseBrackets");\n
  });\n
\n
  function buildKeymap(pairs) {\n
    var map = {name : "autoCloseBrackets"};\n
    for (var i = 0; i < pairs.length; i += 2) (function(left, right) {\n
      function maybeOverwrite(cm) {\n
        var cur = cm.getCursor(), ahead = cm.getRange(cur, CodeMirror.Pos(cur.line, cur.ch + 1));\n
        if (ahead != right) return CodeMirror.Pass;\n
        else cm.execCommand("goCharRight");\n
      }\n
      map["\'" + left + "\'"] = function(cm) {\n
        if (left == right && maybeOverwrite(cm) != CodeMirror.Pass) return;\n
        var cur = cm.getCursor(), ahead = CodeMirror.Pos(cur.line, cur.ch + 1);\n
        cm.replaceSelection(left + right, {head: ahead, anchor: ahead});\n
      };\n
      if (left != right) map["\'" + right + "\'"] = maybeOverwrite;\n
    })(pairs.charAt(i), pairs.charAt(i + 1));\n
    return map;\n
  }\n
})();\n
</textarea></form>\n
\n
    <script type="text/javascript">\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {autoCloseBrackets: true});\n
    </script>\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>closebrackets.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
